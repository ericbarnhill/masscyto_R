rtdc_boxplot_pooled_controls(rtdc_tall, mean_def, "Pooled Controls", median, F)
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_boxplot_pooled_controls(rtdc_tall, mean_def, "Pooled Controls", median, F)
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_boxplot_pooled_controls(rtdc_tall, mean_def, "Pooled Controls", median, F)
rtdc_boxplot_pooled_controls(rtdc_tall, "mean_def", "Pooled Controls", median, F)
rtdc_boxplot_pooled_controls(rtdc_tall, "mean_e", "Pooled Controls", median, F)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, F)
source("load_rtdc_3.R")
XL_PATH <- file.path(PROJ_DIR, "rt-dc_eb_2.xls")
rtdc_tall <- load_rtdc_3(XL_PATH)
FUN = median
LOG = F;
plt_e <- rtdc_exploratory_boxplot(rtdc_tall, "mean_e", "Mean Young's Modulus", FUN, LOG)
print(plt_e)
plt_def <- rtdc_exploratory_boxplot(rtdc_tall, "mean_def", "Mean Deformation", FUN, LOG)
print(plt_def)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, F)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, F)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, T)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, T)
LOG = T
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, LOG)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, LOG)
LOG = F
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, LOG)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, LOG)
rtdc_tall <- load_rtdc_3(XL_PATH)
summary(rtdc_tall)
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
prot
prot[which(
prot == "Control"
)]
pooled_controls[which(
prot == "Control"
)]
pooled_controls[which(
prot == "Control"
)] <- prot[which(
prot == "Control"
)]
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
sheet <- cbind(cell_type, cont_ag, pooled_controls, subj, prot, sheet[,2:ncol(sheet)])
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
warnings()
summary(rtdc_all)
rtdc_all %>% summary
rtdc_tall %>% summary
208*2 + 156*2
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall %>% summary
rtdc_tall <- load_rtdc_3(XL_PATH)
rtdc_tall %>% summary
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
rtdc_tall %>% summary
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall %>% summary
rtdc_tall <- load_rtdc_3(XL_PATH)
rtdc %>% summary
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
debugSource('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
rtdc_tall %>% summary
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
rtdc_tall <- load_rtdc_3(XL_PATH)
load_rtdc_3(XL_PATH) %>% summary
source('~/Documents/code/R/masscyto_R/load_rtdc_3.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2")
lapply(packages, require, character.only = T)
# make all plots on their own  line:
hook_plot = knitr::knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) paste('\n', hook_plot(x, options), sep = ''))
PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2")
lapply(packages, require, character.only = T)
# make all plots on their own  line:
hook_plot = knitr::knit_hooks$get('plot')
knitr::knit_hooks$set(plot = function(x, options) paste('\n', hook_plot(x, options), sep = ''))
names(rtdc_tall)
PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2")
lapply(packages, require, character.only = T)
# make all plots on their own  line:
hook_plot = knitr::knit_hooks$get('plot')
knitr::knit_hooks$set(plot = function(x, options) paste('\n', hook_plot(x, options), sep = ''))
source("load_rtdc_3.R")
XL_PATH <- file.path(PROJ_DIR, "rt-dc_eb_2.xls")
rtdc_tall <- load_rtdc_3(XL_PATH)
LOG = F
knitr::knit_hooks$set(plot = function(x, options) paste('\n', hook_plot(x, options), sep = ''))
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, LOG)
rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, LOG)
LOG = T
plot1 <- rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Log Def", median, LOG)
print(plot1)
plot2 <- rtdc_boxplot_pooled_controls_treatments(rtdc_tall, "mean_e", "Pooled Controls and Treatments, Log E", median, LOG)
print(plot2)
FUN = median
LOG_DEF = F;
LOG_E = F;
plt_def <- rtdc_exploratory_boxplot(rtdc_tall, "mean_def", "Mean Deformation", FUN, LOG_DEF)
print(plt_def)
plt_e <- rtdc_exploratory_boxplot(rtdc_tall, "mean_e", "Mean Young's Modulus", FUN, LOG_E)
print(plt_e)
rtdc_boxplot_pooled_controls(rtdc_tall, "mean_def", "Pooled Controls and Treatments, Def", median, LOG_DEF)
rtdc_boxplot_pooled_controls(rtdc_tall, "mean_e", "Pooled Controls and Treatments, E", median, LOG_E)
student_t_model <- "
model {
for (i in 1:length(y)) {
y[i] ~ dt(mu[i], tau, k)
mu[i] <- beta0 + beta1[cont_ag[i]]
}
for (k in 1:n_cont_ag) {
beta1[k] ~ dnorm(mu_ag, tau_ag)
}
sig ~ dunif(0.001, 1000)
tau <- 1 / sig^2
k ~ dunif(0.001, 10)
mu_ag ~ dnorm(0, 1 / 10000)
sig_ag ~ dunif(0.001, 1000)
tau_ag <- 1 / sig_pix^2
}
"
require(rjags)
neutro_subset(prot == "Control" & measurement == "mean_def" & cell_type == "Neutrophils")
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(cont_ag))
)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls,))
)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
summary(jags_dataset)
head(jags_dataset)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
student_t_model <- "
model {
for (i in 1:length(y)) {
y[i] ~ dt(mu[i], tau, k)
mu[i] <- beta0 + beta1[cont_ag[i]]
}
for (k in 1:n_cont_ag) {
beta1[k] ~ dnorm(mu_ag, tau_ag)
}
sig ~ dunif(0.001, 1000)
tau <- 1 / sig^2
k ~ dunif(0.001, 10)
mu_ag ~ dnorm(0, 1 / 10000)
sig_ag ~ dunif(0.001, 1000)
tau_ag <- 1 / sig_ag^2
}
"
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
student_t_model <- "
model {
for (i in 1:length(y)) {
y[i] ~ dt(mu[i], tau, k)
mu[i] <- beta[cont_ag[i]]
}
for (k in 1:n_cont_ag) {
beta[k] ~ dnorm(mu_ag, tau_ag)
}
sig ~ dunif(0.001, 1000)
tau <- 1 / sig^2
k ~ dunif(0.001, 10)
mu_ag ~ dnorm(0, 1 / 10000)
sig_ag ~ dunif(0.001, 1000)
tau_ag <- 1 / sig_ag^2
}
"
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
update(jags_model, 1e3)
sim <- jags.samples(model=jags_model, variable.names = c("b0", "b1"), n.iter = 5e3)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
update(jags_model, 1e3)
sim <- jags.samples(model=jags_model, variable.names = c("beta"), n.iter = 5e3)
gelman <- gelman.diag(sim)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
update(jags_model, 1e3)
sim <- coda.samples(model=jags_model, variable.names = c("beta"), n.iter = 5e3)
gelman <- gelman.diag(sim)
csim <- as.mcmc(do.call(rbind, sim))
print(sim)
plot(sim)
par(mar =c(1,1,1,1))
plot(sim)
x11()
plot(sim)
gelman
colMeans(csim)
summary(gelman)
HDInterval::hdi(csim[,1])
HDInterval::hdi(csim[,2])
HDInterval::hdi(csim[,3])
HDInterval::hdi(csim[,2] - csim[,1])
levels(rtdc_tall$pooled_controls)
?geom_density
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_density(data = value) +
facet_grid(. ~ contrast_type)
head(contrasts_tidy)
head(contrasts)
head(dotarem_contrasts)
head(as.data.frame(dotarem_contrasts)
)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_density(data = value) +
facet_grid(. ~ contrast_type)
head(contrasts)
head(contrasts_tidy)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_density(aes(data = value)) +
facet_grid(. ~ contrast_type)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_density(aes(x = value)) +
facet_grid(. ~ contrast_type)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_histogram(aes(x = value)) +
facet_grid(. ~ contrast_type)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_histogram(aes(x = value), bins=30) +
facet_grid(. ~ contrast_type)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "contrast_type", "value")
# plot
ggplot(contrasts_tidy) +
geom_histogram(aes(x = value), bins=30) +
facet_grid(. ~ contrast_type) +
ggtitle("Contrasts")
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
densities <- data.frame(dotarem_samples, gadovist_samples, gdcl3_samples, magnevist_samples)
names(densities) <- c("Control", "Dotarem", "Gadovist", "GdCl3", "Magnevist")
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
densities <- data.frame(control_samples, dotarem_samples, gadovist_samples, gdcl3_samples, magnevist_samples)
names(densities) <- c("Control", "Dotarem", "Gadovist", "GdCl3", "Magnevist")
densities_tidy <- gather(densities, "Condition", "Value")
# plot densities
plt1 <- ggplot(densities_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Condition) +
ggtitle("Densities")
print(plt1)
# plot contrasts
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "Contrast", "Value")
# plot
plt2 <- ggplot(contrasts_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Contrast) +
ggtitle("Contrasts")
print(plt2)
hdi(contrasts)
require(HDInterval)
hdi(contrasts)
hd <- hdi(contrasts)
hdquantile()
hd
hd[1]}
hd[1]
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
densities <- data.frame(control_samples, dotarem_samples, gadovist_samples, gdcl3_samples, magnevist_samples)
names(densities) <- c("Control", "Dotarem", "Gadovist", "GdCl3", "Magnevist")
densities_tidy <- gather(densities, "Condition", "Value")
# plot densities
plt1 <- ggplot(densities_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Condition) +
ggtitle("Densities")
print(plt1)
# plot contrasts
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "Contrast", "Value")
# plot
plt2 <- ggplot(contrasts_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Contrast) +
ggtitle("Contrasts")
print(plt2)
PROJ_DIR = "/home/ericbarnhill/Documents/code/R/masscyto_R"
knitr::opts_chunk$set(root.dir = PROJ_DIR)
setwd(PROJ_DIR)
packages <- c("gdata","tidyr","dplyr","magrittr", "ggplot2")
lapply(packages, require, character.only = T)
# make all plots on their own  line:
hook_plot = knitr::knit_hooks$get('plot')
knitr::knit_hooks$set(plot = function(x, options) paste('\n', hook_plot(x, options), sep = ''))
require(HDInterval)
require(rjags)
neutro_subset <- subset(rtdc_tall, measurement == "mean_def" & cell_type == "Neutrophils")
jags_dataset <- list(
y = neutro_subset$value,
cont_ag = neutro_subset$pooled_controls,
n_cont_ag = length(levels(neutro_subset$pooled_controls))
)
jags_model <- jags.model(file = textConnection(student_t_model), data = jags_dataset, n.chains = 3)
update(jags_model, 1e3)
sim <- coda.samples(model=jags_model, variable.names = c("beta", "tau", "k", "mu_ag", "tau_ag"), n.iter = 5e3)
gelman <- gelman.diag(sim)
csim <- as.mcmc(do.call(rbind, sim))
plot(sim)
print(gelman)
control_samples <- csim[,1]
dotarem_samples  <- csim[,2]
gadovist_samples  <- csim[,3]
gdcl3_samples <- csim[,4]
magnevist_samples <- csim[,5]
densities <- data.frame(control_samples, dotarem_samples, gadovist_samples, gdcl3_samples, magnevist_samples)
names(densities) <- c("Control", "Dotarem", "Gadovist", "GdCl3", "Magnevist")
densities_tidy <- gather(densities, "Condition", "Value")
# plot densities
plt1 <- ggplot(densities_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Condition) +
ggtitle("Densities")
print(plt1)
# plot contrasts
dotarem_contrasts <- dotarem_samples - control_samples
gadovist_contrasts <- gadovist_samples - control_samples
gdcl3_contrasts <- gdcl3_samples - control_samples
magnevist_contrasts <- magnevist_samples - control_samples
contrasts <- data.frame(dotarem_contrasts, gadovist_contrasts, gdcl3_contrasts, magnevist_contrasts)
names(contrasts) <- c("Dotarem vs Control", "Gadovist vs Control", "GdCl3 vs Control", "Magnevist vs Control")
contrasts_tidy <- gather(contrasts, "Contrast", "Value")
# plot
plt2 <- ggplot(contrasts_tidy) +
geom_histogram(aes(x = Value), bins=30) +
facet_grid(. ~ Contrast) +
ggtitle("Contrasts")
print(plt2)
plot(sim)
